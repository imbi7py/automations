AWSTemplateFormatVersion: 2010-09-09
Description: A template for launching the message_followers auto responder

Parameters:
  ConsumerKey:
    Type: String
    NoEcho: True
  ConsumerSecret:
    Type: String
    NoEcho: True
  AccessTokenKey:
    Type: String
    NoEcho: True
  AccessTokenSecret:
    Type: String
    NoEcho: True
  Message:
    Type: String
    Description: The text you want to send to your new followers

Resources:
  TwitterFollowers:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        -
          AttributeName: follower
          AttributeType: N
      KeySchema:
        -
          AttributeName: follower
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5

  MessageFollowersRole:
    Type: AWS::IAM::Role
    DependsOn: TwitterFollowers
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: logs:*
                Resource: arn:aws:logs:*:*:*
              - Effect: Allow
                Action:
                  - dynamodb:DeleteItem
                  - dynamodb:GetRecords
                  - dynamodb:GetItem
                  - dynamodb:PutItem
                  - dynamodb:Query
                  - dynamodb:Scan
                  - dynamodb:BatchWriteItem
                  - dynamodb:BatchGetItem
                Resource: !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${TwitterFollowers}

  LoadFollowers:
    Type: AWS::Lambda::Function
    DependsOn:
      - TwitterFollowers
      - MessageFollowersRole
    Properties:
      Code:
        S3Bucket: !Sub randhunt-code-${AWS::Region}
        S3Key: message_followers.zip
      Description: Load in all of your existing followers
      Handler: load_followers.lambda_handler
      Runtime: python2.7
      Timeout: 300
      MemorySize: 256
      Role: !GetAtt MessageFollowersRole.Arn
      Environment:
        Variables:
          CONSUMER_KEY: !Ref ConsumerKey
          CONSUMER_SECRET: !Ref ConsumerSecret
          ACCESS_TOKEN_KEY: !Ref AccessTokenKey
          ACCESS_TOKEN_SECRET: !Ref AccessTokenSecret
          DDB_TABLE: !Ref TwitterFollowers

  LoadData:
    Type: Custom::LoadData
    Properties:
      ServiceToken: !GetAtt LoadFollowers.Arn

  MessageFollowers:
    Type: AWS::Lambda::Function
    DependsOn:
      - LoadData
      - LoadFollowers
    Properties:
      Description: Loop through followers and tweet at each new follower
      Handler: message_followers.lambda_handler
      Runtime: python2.7
      Code:
        S3Bucket: !Sub randhunt-code-${AWS::Region}
        S3Key: message_followers.zip
      MemorySize: 256
      Timeout: 300
      Role: !GetAtt MessageFollowersRole.Arn
      Environment:
        Variables:
          CONSUMER_KEY: !Ref ConsumerKey
          CONSUMER_SECRET: !Ref ConsumerSecret
          ACCESS_TOKEN_KEY: !Ref AccessTokenKey
          ACCESS_TOKEN_SECRET: !Ref AccessTokenSecret
          DDB_TABLE: !Ref TwitterFollowers
          MESSAGE: !Ref Message

  MessageFollowersEveryFiveMinutes:
    Type: AWS::Events::Rule
    Properties:
      ScheduleExpression: rate(5 minutes)
      State: ENABLED
      Targets:
        -
          Arn: !GetAtt MessageFollowers.Arn
          Id: MessageFollowers